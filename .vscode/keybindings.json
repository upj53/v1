// 키 바인딩을 이 파일에 넣어서 기본값 재정의auto[]
[
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+k ctrl+shift+s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k d",
    "command": "-workbench.files.action.compareWithSaved"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+insert",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+c",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "shift+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-notebook.cell.copyDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-notebook.cell.copyUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "shift+insert",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "shift+delete",
    "command": "-editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+x",
    "command": "-editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+shift+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "s",
    "command": "-workbench.action.files.save",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "s",
    "command": "-workbench.action.files.save",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "y",
    "command": "-notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "m",
    "command": "-notebook.cell.changeToMarkdown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "key": "c",
    "command": "-notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "x",
    "command": "-notebook.cell.cut",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "d d",
    "command": "-notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "j",
    "command": "-notebook.focusNextEditor",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "k",
    "command": "-notebook.focusPreviousEditor",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "a",
    "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "b",
    "command": "-notebook.cell.insertCodeCellBelowAndFocusContainer",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "v",
    "command": "-notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "l",
    "command": "-notebook.cell.toggleLineNumbers",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "o",
    "command": "-notebook.cell.toggleOutputs",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "z",
    "command": "-undo",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "escape",
    "command": "-notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  }
]